@page "/demo"
@using BlazorApp.DataStreaming
@inherits LayoutComponentBase
@inject DEMORealtimeService service

<h1>Demo</h1>

<h2> @service.a </h2>
<h2> @service.b </h2>

<input type="range" @bind="service.a" @bind:event="oninput"/>
<input type="range" @bind="service.b" @bind:event="oninput"/>


@code{
    
    protected override async Task OnInitializedAsync()
    {
        service.UpdateEvent += async () => await InvokeAsync(() => this.StateHasChanged());
    }
}

@* <style> *@
@*     body{ *@
@*         margin: 0; *@
@*     } *@
@*     .container{ *@
@*         perspective: 1000px; *@
@*         display: grid; *@
@*         align-items: center; *@
@*         justify-items: center; *@
@*         height: 100vh; *@
@*         wie: 100vw; *@
@*     } *@
@*     .rotate{ *@
@*         height: 300px; *@
@*         width: 300px; *@
@*         background-color: lightcoral; *@
@*     } *@
@* </style> *@
@* *@
@* <div class="container"> *@
@*     <div class="rotate" style="transform: rotateX(@(service.a + "deg")) rotateY(@(service.b + "deg"));"> *@
@* *@
@*     </div> *@
@*     <input type="range" @bind="service.a" @bind:event="oninput"/> *@
@*     <input type="range" @bind="service.b" @bind:event="oninput"/> *@
@* *@
@* </div> *@
@* *@
@* @code{ *@
@*     protected override async Task OnInitializedAsync() *@
@*     { *@
@*         service.UpdateEvent += async () => await InvokeAsync(() => this.StateHasChanged()); *@
@*     } *@
@* } *@